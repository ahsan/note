#! /bin/bash

[[ -n $DEBUG ]] && set -x

set -eou pipefail
echo "$(dirname $0)"

readonly SCRIPT_DIR="$(dirname $0)"
readonly NOTES_DIR="$(dirname $0)/.notes"
readonly LOGS_FILE="$SCRIPT_DIR/.log"
readonly NEXT_ID_FILE="$SCRIPT_DIR/.next_id"

main() {

  # Initialize 
  if [[ ! -f "$NEXT_ID_FILE" ]]; then
    init
  fi

  # Initialize notes directory if it doesn't alread exist
  if [[ ! -d "$NEXT_ID_FILE" ]]; then
    init_notes
  fi

  # If there are less than 2 arguments, exit
  if [ "$#" -lt 2 ]; then
    usage
    exit
  fi

  # Route arguments to functions
  if [ "$1" = "add" ]; then
    add_note $2
  elif [ "$1" = "view" ]; then
    view_note $2
  elif [ "$1" = "list" ]; then
    list_notes $2
  fi
}

init_notes() {
  mkdir -p "$NOTES_DIR"
}

init() {
  # start the log
  local 
  touch "$LOGS_FILE"
  add_log "Initialized log file $LOGS_FILE"

  # start the id count
  touch "$NEXT_ID_FILE"
  echo 0 > "$NEXT_ID_FILE"
  add_log "Initialized next_id in the file $NEXT_ID_FILE with 0"
}

add_log() {
  printf "$1\n" >> "$LOGS_FILE"
}

get_next_id() {
  echo $(cat "$NEXT_ID_FILE")
}

increment_next_id() {
  local current_next_id=$(get_next_id)
  local next_id=$((current_next_id + 1))
  echo "$next_id" > "$NEXT_ID_FILE"
  add_log "Incremented next id to $next_id"
  echo "$next_id"
}

get_note_id() {
  echo "$(whoami)-$(get_next_id)"
}

add_note() {
  local book_name="$1"
  local book_full_path="$NOTES_DIR/$book_name"
  local note_id=$(get_note_id)
  local note_name="$(whoami)-$note_id"
  local note_full_path="$book_full_path/$note_id"

  # Initialize book directory if it doesn't exist already
  if [[ ! -d "$book_full_path" ]]; then
    mkdir -p "$book_full_path"
  fi

  increment_next_id && touch "$note_full_path"
  vi "$note_full_path"
}

view_note() {
  local note_id="$1"
  local file_path=$(find "$NOTES_DIR" -name "$note_id" | awk 'NR==1{print $1}')
  cat "$file_path"
}

list_notes() {
  local book_name="$1"
  local book_full_path="$NOTES_DIR/$book_name"
  # local file_names=$(ls "$book_full_path" | sort)
  # echo $file_names

  echo "Notes in $book_name:"
  for file in "$book_full_path"/*
  do
    local file_name=$(basename $file)
    local first_line=$(head $file)
    echo "$file_name: $first_line"
  done
}

usage() {
  local self="note"

  cat <<EOF
Usage:
$self                 print this help menu
$self  add <book>     add a note in <book>
$self list <book>     list all notes in <book>
$self view <note_id>  view note
EOF
}

main "$@"